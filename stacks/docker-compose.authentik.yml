name: authentik
services:
  authentik-ldap:
    image: ghcr.io/goauthentik/ldap:2025.8.4@sha256:5948a57d5c9af9134eb22550cbc4084c8d441fd00c2cab250f4a1445727d3262
    container_name: authentik-ldap
    secrets:
      - authentik_ldap_token
    environment:
      AUTHENTIK_HOST: https://authentik.etch.benpearce.io
      AUTHENTIK_TOKEN: file:///run/secrets/authentik_ldap_token
    ports:
      - '0.0.0.0:389:3389/tcp'
    networks:
      - authentik-web
    restart: unless-stopped
    labels:
      traefik.enable: true
      traefik.tcp.routers.authentik-ldap.entrypoints: ldaps
      traefik.tcp.routers.authentik-ldap.rule: HostSNI(`authentik.${HOST}`)
      traefik.tcp.routers.authentik-ldap.tls: true
      traefik.tcp.routers.authentik-ldap.service: authentik-ldap
      traefik.tcp.services.authentik-ldap.loadbalancer.server.port: 3389
    user: ${PUID}:${PGID}
  authentik-postgres:
    image: postgres:18.0-alpine3.22@sha256:48c8ad3a7284b82be4482a52076d47d879fd6fb084a1cbfccbd551f9331b0e40
    container_name: authentik-postgres
    volumes:
      - authentik-postgres:/var/lib/postgresql
      - ${DATA_DIR}/postgres/authentik:/docker-entrypoint-initdb.d
    secrets:
      - authentik_postgres_password
    environment:
      POSTGRES_DB: authentik
      POSTGRES_PASSWORD_FILE: /run/secrets/authentik_postgres_password
      POSTGRES_USER: authentik
    networks:
      - authentik
    restart: unless-stopped
    healthcheck:
      interval: 30s
      retries: 5
      start_period: 20s
      test:
        - CMD-SHELL
        - pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}
      timeout: 5s
  authentik-redis:
    image: redis:8.2.2@sha256:f0957bcaa75fd58a9a1847c1f07caf370579196259d69ac07f2e27b5b389b021
    container_name: authentik-redis
    volumes:
      - ${DATA_DIR}/redis/authentik:/data
    networks:
      - authentik
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      interval: 30s
      retries: 5
      start_period: 20s
      test:
        - CMD-SHELL
        - redis-cli ping | grep PONG
      timeout: 3s
  authentik-server:
    image: ghcr.io/goauthentik/server:2025.8.4@sha256:a10398480e7f8292dbcc27b64fe572f6abed6220bd40f4b6d28e9c12d4b78dca
    container_name: authentik-server
    depends_on:
      authentik-postgres:
        condition: service_healthy
      authentik-redis:
        condition: service_healthy
    volumes:
      - ${DATA_DIR}/authentik/media:/media
      - ${DATA_DIR}/authentik/templates:/templates
    secrets:
      - authentik_postgres_password
      - authentik_secret_key
      - smtp_password
    environment:
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgres
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: file:///run/secrets/authentik_postgres_password
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_SECRET_KEY: file:///run/secrets/authentik_secret_key
      AUTHENTIK_EMAIL__HOST: ${SMTP_HOST}
      AUTHENTIK_EMAIL__PORT: 465
      AUTHENTIK_EMAIL__USERNAME: ${SMTP_USER}
      AUTHENTIK_EMAIL__PASSWORD: file:///run/secrets/smtp_password
      AUTHENTIK_EMAIL__USE_SSL: true
      AUTHENTIK_EMAIL__FROM: ${SMTP_USER}
    networks:
      - authentik-web
      - authentik
    command: server
    restart: unless-stopped
    labels:
      traefik.docker.network: authentik-web
      traefik.enable: true
      traefik.http.routers.authentik.entrypoints: https
      traefik.http.routers.authentik.rule: Host(`authentik.${HOST}`)
      traefik.http.services.authentik.loadbalancer.server.port: 9000
      readme.description: Open Source Identity Provider.
      readme.links.web: https://goauthentik.io/
    user: ${PUID}:${PGID}
  authentik-worker:
    image: ghcr.io/goauthentik/server:2025.8.4@sha256:a10398480e7f8292dbcc27b64fe572f6abed6220bd40f4b6d28e9c12d4b78dca
    container_name: authentik-worker
    depends_on:
      authentik-postgres:
        condition: service_healthy
      authentik-redis:
        condition: service_healthy
    volumes:
      - ${DATA_DIR}/authentik/media:/media
      - ${DATA_DIR}/authentik/certs:/certs
      - ${DATA_DIR}/authentik/templates:/templates
    secrets:
      - authentik_postgres_password
      - authentik_secret_key
      - smtp_password
    environment:
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgres
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: file:///run/secrets/authentik_postgres_password
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_SECRET_KEY: file:///run/secrets/authentik_secret_key
      AUTHENTIK_EMAIL__HOST: ${SMTP_HOST}
      AUTHENTIK_EMAIL__PORT: 465
      AUTHENTIK_EMAIL__USERNAME: ${SMTP_USER}
      AUTHENTIK_EMAIL__PASSWORD: file:///run/secrets/smtp_password
      AUTHENTIK_EMAIL__USE_SSL: true
      AUTHENTIK_EMAIL__FROM: ${SMTP_USER}
    networks:
      - authentik
    command: worker
    restart: unless-stopped
    user: ${PUID}:${PGID}
networks:
  authentik:
    name: authentik
  authentik-web:
    name: authentik-web
volumes:
  authentik-postgres:
    name: authentik-postgres
secrets:
  authentik_postgres_password:
    file: ../.secrets/authentik_postgres_password
  authentik_ldap_token:
    file: ../.secrets/authentik_ldap_token
  authentik_secret_key:
    file: ../.secrets/authentik_secret_key
  smtp_password:
    file: ../.secrets/smtp_password
